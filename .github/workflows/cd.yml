name: CD 워크플로우

on:
  push:
    branches:
      - cicd-test


jobs:
  cd:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_MANAGER_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_MANAGER_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_S3_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    steps:
      - uses: actions/checkout@v4
      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Gradle Wrapper 실행 권한 부여
        run: chmod +x ./gradlew
      - name: Gradle Wrapper 로 빌드 + 테스트
        run: ./gradlew build -Dspring.profiles.active=prod # 옵션을 넣어줘야 함

      - name: Zip 만들기 그리고 S3에 업로드
        run: |
          zip -r ${GITHUB_SHA}.zip b2c/build/libs/*.jar b2b/build/libs/*.jar admin/build/libs/*.jar appspec.yml scripts/*.sh
          aws s3 cp ${GITHUB_SHA}.zip s3://${AWS_S3_BUCKET}/deploy/${GITHUB_SHA}.zip --region ${AWS_DEFAULT_REGION}
        #          zip -r b2c-${GITHUB_SHA}.zip b2c/build/libs/*.jar appspec.yml scripts/b2c/*.sh
        #          zip -r b2b-${GITHUB_SHA}.zip b2b/build/libs/*.jar appspec.yml scripts/b2b/*.sh
        #          zip -r admin-${GITHUB_SHA}.zip admin/build/libs/*.jar appspec.yml scripts/admin/*.sh
        shell: bash

      - name: CodeDeploy 배포 시작
        run: |
          aws deploy create-deployment \
          --application-name ${AWS_CODEDEPLOY_APPLICATION_NAME} \
          --deployment-group-name ${AWS_CODEDEPLOY_DEPLOYMENT_GROUP} \
          --s3-location bucket=${AWS_S3_BUCKET},key=deploy/${GITHUB_SHA}.zip,bundleType=zip \
          --region ${{ secrets.AWS_S3_REGION }}
        env:
          AWS_CODEDEPLOY_APPLICATION_NAME: ${{ secrets.AWS_CODEDEPLOY_APPLICATION_NAME }}
          AWS_CODEDEPLOY_DEPLOYMENT_GROUP: ${{ secrets.AWS_CODEDEPLOY_DEPLOYMENT_GROUP }}